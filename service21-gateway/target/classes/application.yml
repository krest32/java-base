# 服务端口
server:
  port: 8010
  # 服务名
spring:
  redis:
    host: 192.168.42.132
    port: 6379
  application:
    name: com.krest.cloud.service-gateway

  cloud:
    gateway:
      discovery:
        locator:
          #使用服务发现路由
          enabled: true
          #服务路由名小写
          lower-case-service-id: true
      routes:
        - id: con
          uri: lb://con
        # 传入条件数组，判断是否满足条件,如果不满住，就不允许访问端口
          predicates:
            - Path=/mybatisplus/user/**,/api-gateway/**
            # 限制请求的方式只能是Get Post
  #          - Method=POST
            # 设置只有在这个时间之前或者之后才能转发路由
            - After=2018-01-20T06:06:06+08:00[Asia/Shanghai]
            - Before=2022-01-20T06:06:06+08:00[Asia/Shanghai]
  #          # 设置 cookie 比对访问
  #          - Cookie=test_token, 123456
          filters:
            # http://localhost:8010/api-gateway/mybatisplus/user/getUserById/1 ,重写为http://localhost:8010/mybatisplus/user/getUserById/1
            - RewritePath=/api-gateway(?<segment>.*), $\{segment}
            # 网管过滤器-- 请求限流过滤器（429错误请求代码）
            - name: RequestRateLimiter
              args:
                # 令牌桶每秒填充速度
                redis-rate-limiter.replenishRate: 1
                # 令牌桶大小
                redis-rate-limiter.burstCapacity: 2
                # 程序中的Bean对象，在java中可以进行设置
                key-resolver: "#{@pathKeyResolver}"


    nacos:
      discovery:
        server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850
my:
  thread:
    core-size: 10
    max-size: 20
    keep-alive-time: 3000
